generator client {
  provider = env("PRISMA_PY_GENERATOR")
}

datasource db {
  provider = "sqlite"
  url      = "file:data/digest.db"
}

model Guild {
  id        BigInt   @id
  name      String?
  icon      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  channels  Channel[]
  messages  Message[]
}

model Channel {
  id               BigInt      @id
  guildId          BigInt
  name             String?
  type             String
  parentId         BigInt?
  topic            String?
  position         Int?
  nsfw             Boolean?    @default(false)
  rateLimitPerUser Int?
  isActive         Boolean     @default(true)
  lastSyncedAt     DateTime?
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt

  guild    Guild    @relation(fields: [guildId], references: [id])
  parent   Channel? @relation("ChannelParent", fields: [parentId], references: [id])
  children Channel[] @relation("ChannelParent")
  state    ChannelState?
  messages Message[]

  @@index([guildId, type])
  @@index([parentId])
}

model OAuthToken {
  id           Int       @id @default(autoincrement())
  provider     String    // 'discord'
  tokenType    String
  accessToken  String
  refreshToken String?
  scope        String?
  expiresAt    DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@unique([provider, tokenType])
}

model User {
  id         BigInt   @id
  username   String?
  globalName String?
  discriminator String?
  avatar     String?
  bot        Boolean? @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  messages   Message[]
  mentions   MessageMention[]
}

model Message {
  id               BigInt   @id
  channelId        BigInt
  guildId          BigInt?
  authorId         BigInt
  content          String?
  createdAt        DateTime
  editedAt         DateTime?
  link             String?
  reactionsTotal   Int?
  attachmentsCount Int?
  createdAtDb      DateTime @default(now())
  updatedAtDb      DateTime @updatedAt

  channel Channel @relation(fields: [channelId], references: [id])
  guild   Guild?  @relation(fields: [guildId], references: [id])
  author  User    @relation(fields: [authorId], references: [id])
  attachments MessageAttachment[]
  reactions   MessageReaction[]
  mentions    MessageMention[]

  @@index([channelId, createdAt])
  @@index([authorId])
}

model MessageAttachment {
  id         BigInt  @id
  messageId  BigInt
  url        String
  filename   String?
  contentType String?
  size       Int?
  message    Message @relation(fields: [messageId], references: [id])
  @@index([messageId])
}

model MessageReaction {
  id        Int     @id @default(autoincrement())
  messageId BigInt
  emojiId   BigInt?
  emojiName String?
  count     Int?
  message   Message @relation(fields: [messageId], references: [id])
  @@index([messageId])
}

model MessageMention {
  messageId BigInt
  userId    BigInt
  message   Message @relation(fields: [messageId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
  @@id([messageId, userId])
}

model ChannelState {
  channelId              BigInt  @id
  lastMessageId          BigInt?
  lastMessageCreatedAt   DateTime?
  lastIndexedAt          DateTime?
  channel                Channel @relation(fields: [channelId], references: [id])
}
